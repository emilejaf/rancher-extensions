{"version":3,"file":"node-driver-0.1.0.umd.min.574.js","mappings":"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","sources":["webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/components/Loading.vue","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/components/Loading.vue?1fb3","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/components/Loading.vue?1b4a","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/utils/gc/gc-types.ts","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/config/settings.ts","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/store/prefs.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/utils/sort.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/mixins/child-hook.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/plugins/dashboard-store/normalize.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/mixins/create-edit-view/impl.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/mixins/create-edit-view/index.js","webpack://node-driver-0.1.0/../../node_modules/@rancher/shell/components/Loading.vue?22cb"],"sourcesContent":["<script>\nexport default {\n  props: {\n    loading: {\n      type:    Boolean,\n      default: true,\n    },\n    // How to size and position the loading indicator - supports three modes:\n    // 'content' - the content area only (not side nav or header)\n    // 'main' - entire main view excluding the header, but including the side nav\n    // 'relative' - content up to the nearest relatively positioned element\n    mode: {\n      type:    String,\n      default: 'content',\n    },\n    noDelay: {\n      type:    Boolean,\n      default: false,\n    }\n  },\n\n  data() {\n    return { timer: null, showMessage: this.noDelay };\n  },\n\n  mounted() {\n    this.timer = setTimeout(() => {\n      this.showMessage = true;\n    }, 250);\n  },\n\n  beforeUnmount() {\n    clearTimeout(this.timer);\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"loading\"\n    class=\"loading-indicator\"\n  >\n    <div\n      v-if=\"showMessage\"\n      class=\"overlay\"\n      :class=\"{ 'overlay-content-mode' : mode === 'content', 'overlay-main-mode' : mode === 'main' }\"\n    >\n      <t\n        k=\"generic.loading\"\n        :raw=\"true\"\n      />\n    </div>\n  </div>\n  <div v-else>\n    <slot />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .overlay {\n    align-items: center;\n    background-color: var(--overlay-bg);\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n\n    // Covers both default `content` mode, an often used `relative` mode and any other value of mode\n    z-index: z-index('loading');\n\n    &-main-mode {\n      top: var(--header-height);\n      z-index: z-index('loadingMain');\n    }\n\n    &-content-mode {\n      left: calc(var(--nav-width));\n      top: var(--header-height);\n    }\n  }\n</style>\n","import { render } from \"./Loading.vue?vue&type=template&id=1d9696d1&scoped=true\"\nimport script from \"./Loading.vue?vue&type=script&lang=js\"\nexport * from \"./Loading.vue?vue&type=script&lang=js\"\n\nimport \"./Loading.vue?vue&type=style&index=0&id=1d9696d1&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1d9696d1\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".overlay[data-v-1d9696d1]{align-items:center;background-color:var(--overlay-bg);display:flex;justify-content:center;position:absolute;bottom:0;top:0;left:0;right:0;text-align:center;z-index:12}.overlay-main-mode[data-v-1d9696d1]{top:var(--header-height);z-index:51}.overlay-content-mode[data-v-1d9696d1]{left:calc(var(--nav-width));top:var(--header-height)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export type GC_PREFERENCES = {\n  enabled: boolean,\n  enabledInterval: boolean,\n  interval: number,\n  enabledOnNavigate: boolean,\n  ageThreshold: number,\n  countThreshold: number\n}\n\nexport const GC_DEFAULTS: GC_PREFERENCES = {\n  enabled: false,\n\n  // When GC Runs\n  enabledInterval:   true,\n  interval:          1 * 60 * 5,\n  enabledOnNavigate: true,\n\n  // How GC handles resources when GC'ing\n  ageThreshold:   1 * 60 * 2,\n  countThreshold: 500,\n};\n","// Settings\nimport { GC_DEFAULTS, GC_PREFERENCES } from '@shell/utils/gc/gc-types';\nimport { PaginationSettings } from '@shell/types/resources/settings';\n\ninterface GlobalSettingRuleset {\n  name: string,\n  key?: string | number,\n  factoryArg?: string | number | (string | number)[]\n}\n\ninterface GlobalSetting {\n  [key: string]: {\n    alias?: string,\n    canReset?: boolean,\n    customFormatter?: string,\n    from?: string,\n    kind?: string,\n    options?: string[]\n    readOnly?: boolean,\n    /**\n     * Function used from the form validation\n     */\n    ruleSet?: GlobalSettingRuleset[],\n    warning?: string\n  };\n}\n\n// Adapted from: https://github.com/rancher/ui/blob/08c379a9529f740666a704b52522a468986c3520/lib/shared/addon/utils/constants.js#L564\n// Setting IDs\nexport const SETTING = {\n  VERSION_RANCHER: 'server-version',\n  VERSION_CLI:     'cli-version',\n  VERSION_MACHINE: 'machine-version',\n  VERSION_HELM:    'helm-version',\n  CLI_URL:         {\n    DARWIN:  'cli-url-darwin',\n    WINDOWS: 'cli-url-windows',\n    LINUX:   'cli-url-linux',\n  },\n  API_HOST: 'api-host',\n  CA_CERTS: 'cacerts',\n\n  // Allow the local cluster to be hidden\n  HIDE_LOCAL_CLUSTER:                   'hide-local-cluster',\n  AUTH_TOKEN_MAX_TTL_MINUTES:           'auth-token-max-ttl-minutes',\n  KUBECONFIG_GENERATE_TOKEN:            'kubeconfig-generate-token',\n  KUBECONFIG_DEFAULT_TOKEN_TTL_MINUTES: 'kubeconfig-default-token-ttl-minutes',\n  ENGINE_URL:                           'engine-install-url',\n  ENGINE_ISO_URL:                       'engine-iso-url',\n  FIRST_LOGIN:                          'first-login',\n  INGRESS_IP_DOMAIN:                    'ingress-ip-domain',\n  SERVER_URL:                           'server-url',\n  RKE_METADATA_CONFIG:                  'rke-metadata-config',\n  TELEMETRY:                            'telemetry-opt',\n  EULA_AGREED:                          'eula-agreed',\n  AUTH_USER_INFO_MAX_AGE_SECONDS:       'auth-user-info-max-age-seconds',\n  AUTH_USER_SESSION_TTL_MINUTES:        'auth-user-session-ttl-minutes',\n  AUTH_USER_INFO_RESYNC_CRON:           'auth-user-info-resync-cron',\n  AUTH_LOCAL_VALIDATE_DESC:             'auth-password-requirements-description',\n  PASSWORD_MIN_LENGTH:                  'password-min-length', // CATTLE_PASSWORD_MIN_LENGTH\n  CLUSTER_TEMPLATE_ENFORCEMENT:         'cluster-template-enforcement',\n  UI_INDEX:                             'ui-index',\n  UI_DASHBOARD_INDEX:                   'ui-dashboard-index',\n  UI_DASHBOARD_HARVESTER_LEGACY_PLUGIN: 'ui-dashboard-harvester-legacy-plugin',\n  UI_OFFLINE_PREFERRED:                 'ui-offline-preferred',\n  SYSTEM_DEFAULT_REGISTRY:              'system-default-registry',\n  UI_ISSUES:                            'ui-issues',\n  PL:                                   'ui-pl',\n  PL_RANCHER_VALUE:                     'rancher',\n  SUPPORTED:                            'has-support',\n  BANNERS:                              'ui-banners',\n  ISSUES:                               'ui-issues',\n  BRAND:                                'ui-brand',\n  LOGO_LIGHT:                           'ui-logo-light',\n  LOGO_DARK:                            'ui-logo-dark',\n  BANNER_LIGHT:                         'ui-banner-light',\n  BANNER_DARK:                          'ui-banner-dark',\n  LOGIN_BACKGROUND_LIGHT:               'ui-login-background-light',\n  LOGIN_BACKGROUND_DARK:                'ui-login-background-dark',\n  PRIMARY_COLOR:                        'ui-primary-color',\n  LINK_COLOR:                           'ui-link-color',\n  COMMUNITY_LINKS:                      'ui-community-links',\n  FAVICON:                              'ui-favicon',\n  UI_PERFORMANCE:                       'ui-performance',\n  UI_CUSTOM_LINKS:                      'ui-custom-links',\n  UI_SUPPORTED_K8S_VERSIONS:            'ui-k8s-supported-versions-range',\n  /**\n   * Allow the backend to force a light/dark theme. Used in non-rancher world and results in the theme used\n   * both pre and post log in. If not present defaults to the usual process\n   */\n  THEME:                                'ui-theme',\n  SYSTEM_NAMESPACES:                    'system-namespaces',\n  /**\n   * Cluster Agent configuration\n   */\n  CLUSTER_AGENT_DEFAULT_AFFINITY:       'cluster-agent-default-affinity',\n  FLEET_AGENT_DEFAULT_AFFINITY:         'fleet-agent-default-affinity',\n  /**\n   * manage rancher repositories in extensions (official, partners repos)\n  */\n  ADD_EXTENSION_REPOS_BANNER_DISPLAY:   'display-add-extension-repos-banner',\n  AGENT_TLS_MODE:                       'agent-tls-mode',\n  /**\n   * User retention settings\n   */\n  USER_RETENTION_CRON:                  'user-retention-cron',\n  USER_RETENTION_DRY_RUN:               'user-retention-dry-run',\n  USER_LAST_LOGIN_DEFAULT:              'user-last-login-default',\n  DISABLE_INACTIVE_USER_AFTER:          'disable-inactive-user-after',\n  DELETE_INACTIVE_USER_AFTER:           'delete-inactive-user-after',\n} as const;\n\n// These are the settings that are allowed to be edited via the UI\nexport const ALLOWED_SETTINGS: GlobalSetting = {\n  [SETTING.CA_CERTS]:            { kind: 'multiline', readOnly: true },\n  [SETTING.ENGINE_URL]:          {},\n  [SETTING.ENGINE_ISO_URL]:      {},\n  [SETTING.PASSWORD_MIN_LENGTH]: {\n    kind:    'integer',\n    ruleSet: [\n      {\n        name:       'betweenValues',\n        key:        'Password',\n        factoryArg: [2, 256]\n      },\n      {\n        name: 'isInteger',\n        key:  'Password',\n      },\n      {\n        name: 'isPositive',\n        key:  'Password',\n      },\n      {\n        name: 'isOctal',\n        key:  'Password',\n      }\n    ],\n  },\n  [SETTING.INGRESS_IP_DOMAIN]:                    {},\n  [SETTING.AUTH_USER_INFO_MAX_AGE_SECONDS]:       {},\n  [SETTING.AUTH_USER_SESSION_TTL_MINUTES]:        {},\n  [SETTING.AUTH_TOKEN_MAX_TTL_MINUTES]:           {},\n  [SETTING.KUBECONFIG_GENERATE_TOKEN]:            { kind: 'boolean' },\n  [SETTING.KUBECONFIG_DEFAULT_TOKEN_TTL_MINUTES]: { kind: 'integer' },\n  [SETTING.AUTH_USER_INFO_RESYNC_CRON]:           {},\n  [SETTING.SERVER_URL]:                           { kind: 'url', canReset: true },\n  [SETTING.RKE_METADATA_CONFIG]:                  { kind: 'json' },\n  [SETTING.SYSTEM_DEFAULT_REGISTRY]:              {},\n  [SETTING.UI_INDEX]:                             {},\n  [SETTING.UI_DASHBOARD_INDEX]:                   {},\n  [SETTING.UI_OFFLINE_PREFERRED]:                 {\n    kind:    'enum',\n    options: ['dynamic', 'true', 'false']\n  },\n  [SETTING.BRAND]:                        { canReset: true },\n  [SETTING.CLUSTER_TEMPLATE_ENFORCEMENT]: { kind: 'boolean' },\n  [SETTING.TELEMETRY]:                    {\n    kind:    'enum',\n    options: ['prompt', 'in', 'out']\n  },\n  [SETTING.HIDE_LOCAL_CLUSTER]: { kind: 'boolean' },\n  [SETTING.AGENT_TLS_MODE]:     {\n    kind:    'enum',\n    options: ['strict', 'system-store'],\n    warning: 'agent-tls-mode'\n  },\n};\n\n/**\n * Settings on how to handle warnings returning in api responses, specifically which to show as growls\n */\nexport interface PerfSettingsWarningHeaders {\n  /**\n   * Warning is a string containing multiple entries. This determines how they are split up\n   *\n   * See https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1693-warnings#design-details\n   */\n  separator: string,\n  /**\n   * Show warnings in a notification if they're not in this block list\n   */\n  notificationBlockList: string[]\n}\n\nexport interface PerfSettingsKubeApi {\n  /**\n   * Settings related to the response header `warnings` value\n   */\n  warningHeader: PerfSettingsWarningHeaders\n}\n\nexport interface PerfSettings {\n  inactivity: {\n      enabled: boolean;\n      threshold: number;\n  };\n  incrementalLoading: {\n      enabled: boolean;\n      threshold: number;\n  };\n  manualRefresh: {};\n  disableWebsocketNotification: boolean;\n  garbageCollection: GC_PREFERENCES;\n  forceNsFilterV2: any;\n  advancedWorker: {};\n  kubeAPI: PerfSettingsKubeApi;\n  serverPagination: PaginationSettings;\n}\n\nexport const DEFAULT_PERF_SETTING: PerfSettings = {\n  inactivity: {\n    enabled:   false,\n    threshold: 900,\n  },\n  incrementalLoading: {\n    enabled:   true,\n    threshold: 1500,\n  },\n  manualRefresh: {\n    enabled:   false,\n    threshold: 1500,\n  },\n  disableWebsocketNotification: true,\n  garbageCollection:            GC_DEFAULTS,\n  forceNsFilterV2:              { enabled: false },\n  advancedWorker:               { enabled: false },\n  kubeAPI:                      {\n    /**\n     * Settings related to the response header `warnings` value\n     */\n    warningHeader: {\n      /**\n       * Warning is a string containing multiple entries. This determines how they are split up\n       *\n       * See https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1693-warnings#design-details\n       */\n      separator:             '299 - ',\n      /**\n       * Show warnings in a notification if they're not in this block list\n       */\n      notificationBlockList: ['299 - unknown field']\n    }\n  },\n  serverPagination: {\n    enabled: false,\n    stores:  {\n      cluster: {\n        resources: {\n          enableAll:  false,\n          enableSome: {\n            enabled: ['configmap', 'secret', 'pod', 'node'],\n            generic: true,\n          }\n        }\n      }\n    }\n  }\n\n};\n","import { SETTING } from '@shell/config/settings';\nimport { MANAGEMENT, STEVE } from '@shell/config/types';\nimport { clone } from '@shell/utils/object';\n\nconst definitions = {};\n/**\n * Key/value of prefrences are stored before login here and cookies due lack of access permission.\n * Once user is logged in while setting asUserPreference, update stored before login Key/value to the backend in loadServer function.\n */\nlet prefsBeforeLogin = {};\n\nexport const create = function(name, def, opt = {}) {\n  const parseJSON = opt.parseJSON === true;\n  const asCookie = opt.asCookie === true;\n  const asUserPreference = opt.asUserPreference !== false;\n  const options = opt.options;\n  const inheritFrom = opt.inheritFrom;\n\n  definitions[name] = {\n    def,\n    options,\n    parseJSON,\n    asCookie,\n    asUserPreference,\n    inheritFrom, // if value is not defined on server, we can default it to another pref\n    mangleRead:  opt.mangleRead, // Alter the value read from the API (to match old Rancher expectations)\n    mangleWrite: opt.mangleWrite, // Alter the value written back to the API (ditto)\n  };\n\n  return name;\n};\n\nexport const mapPref = function(name) {\n  return {\n    get() {\n      return this.$store.getters['prefs/get'](name);\n    },\n\n    set(value) {\n      this.$store.dispatch('prefs/set', { key: name, value });\n    }\n  };\n};\n\n// --------------------\nconst parseJSON = true; // Shortcut for setting it below\nconst asCookie = true; // Store as a cookie so that it's available before auth + on server-side\n\n// Keys must be lowercase and valid dns label (a-z 0-9 -)\nexport const CLUSTER = create('cluster', '');\nexport const LAST_NAMESPACE = create('last-namespace', '');\nexport const NAMESPACE_FILTERS = create('ns-by-cluster', {}, { parseJSON });\nexport const WORKSPACE = create('workspace', '');\nexport const EXPANDED_GROUPS = create('open-groups', ['cluster', 'policy', 'rbac', 'serviceDiscovery', 'storage', 'workload'], { parseJSON });\nexport const FAVORITE_TYPES = create('fav-type', [], { parseJSON });\nexport const PINNED_CLUSTERS = create('pinned-clusters', [], { parseJSON });\nexport const GROUP_RESOURCES = create('group-by', 'namespace');\nexport const DIFF = create('diff', 'unified', { options: ['unified', 'split'] });\nexport const THEME = create('theme', 'auto', {\n  options:     ['light', 'auto', 'dark'],\n  asCookie,\n  parseJSON,\n  mangleRead:  (x) => x.replace(/^ui-/, ''),\n  mangleWrite: (x) => `ui-${ x }`,\n});\nexport const PREFERS_SCHEME = create('pcs', '', { asCookie, asUserPreference: false });\nexport const LOCALE = create('locale', 'en-us', { asCookie });\nexport const KEYMAP = create('keymap', 'sublime', { options: ['sublime', 'emacs', 'vim'] });\nexport const ROWS_PER_PAGE = create('per-page', 100, { options: [10, 25, 50, 100], parseJSON });\nexport const LOGS_WRAP = create('logs-wrap', true, { parseJSON });\nexport const LOGS_TIME = create('logs-time', true, { parseJSON });\nexport const LOGS_RANGE = create('logs-range', '30 minutes', { parseJSON });\nexport const HIDE_REPOS = create('hide-repos', [], { parseJSON });\nexport const HIDE_DESC = create('hide-desc', [], { parseJSON });\nexport const HIDE_SENSITIVE = create('hide-sensitive', true, { options: [true, false], parseJSON });\nexport const SHOW_PRE_RELEASE = create('show-pre-release', false, { options: [false, true], parseJSON });\nexport const SHOW_CHART_MODE = create('chart-mode', 'featured', { parseJSON });\n\nexport const DATE_FORMAT = create('date-format', 'ddd, MMM D YYYY', {\n  options: [\n    'ddd, MMM D YYYY',\n    'ddd, D MMM YYYY',\n    'D/M/YYYY',\n    'M/D/YYYY',\n    'YYYY-MM-DD'\n  ]\n});\n\nexport const TIME_FORMAT = create('time-format', 'h:mm:ss a', {\n  options: [\n    'h:mm:ss a',\n    'HH:mm:ss'\n  ]\n});\n\nexport const TIME_ZONE = create('time-zone', 'local');\n// DEV will be deprecated on v2.7.0, but is needed so that we can grab the value for the new settings that derived from it\n// such as: VIEW_IN_API, ALL_NAMESPACES, THEME_SHORTCUT\nexport const DEV = create('dev', false, { parseJSON });\nexport const VIEW_IN_API = create('view-in-api', false, { parseJSON, inheritFrom: DEV });\nexport const ALL_NAMESPACES = create('all-namespaces', false, { parseJSON, inheritFrom: DEV });\nexport const THEME_SHORTCUT = create('theme-shortcut', false, { parseJSON, inheritFrom: DEV });\nexport const LAST_VISITED = create('last-visited', 'home', { parseJSON });\nexport const SEEN_WHATS_NEW = create('seen-whatsnew', '', { parseJSON });\nexport const READ_WHATS_NEW = create('read-whatsnew', '', { parseJSON });\nexport const AFTER_LOGIN_ROUTE = create('after-login-route', 'home', { parseJSON } );\nexport const HIDE_HOME_PAGE_CARDS = create('home-page-cards', {}, { parseJSON } );\nexport const PLUGIN_DEVELOPER = create('plugin-developer', false, { parseJSON, inheritFrom: DEV }); // Is the user a plugin developer?\n\nexport const _RKE1 = 'rke1';\nexport const _RKE2 = 'rke2';\nexport const PROVISIONER = create('provisioner', _RKE2, { options: [_RKE1, _RKE2] });\n\n// Maximum number of clusters to show in the slide-in menu\nexport const MENU_MAX_CLUSTERS = 10;\n// Prompt for confirm when scaling down node pool in GUI and save the pref\nexport const SCALE_POOL_PROMPT = create('scale-pool-prompt', null, { parseJSON });\n// --------------------\n\nconst cookiePrefix = 'R_';\nconst cookieOptions = {\n  maxAge:   365 * 86400,\n  path:     '/',\n  sameSite: true,\n  secure:   true,\n};\n\nexport const state = function() {\n  return {\n    cookiesLoaded: false,\n    data:          {},\n    definitions,\n  };\n};\n\nexport const getters = {\n  get: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    const user = state.data[key];\n\n    if (user !== undefined) {\n      return clone(user);\n    }\n\n    const def = clone(definition.def);\n\n    return def;\n  },\n\n  defaultValue: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    return clone(definition.def);\n  },\n\n  options: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    if (!definition.options) {\n      throw new Error(`Preference does not have options: ${ key }`);\n    }\n\n    return definition.options.slice();\n  },\n\n  theme: (state, getters, rootState, rootGetters) => {\n    const setting = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.THEME);\n\n    if (setting?.value) {\n      return setting?.value;\n    }\n\n    let theme = getters['get'](THEME);\n    const pcs = getters['get'](PREFERS_SCHEME);\n\n    // console.log('Get Theme', theme, pcs);\n\n    // Ember UI uses this prefix\n    if ( theme.startsWith('ui-') ) {\n      theme = theme.substr(3);\n    }\n\n    if ( theme === 'auto' ) {\n      if ( pcs === 'light' || pcs === 'dark' ) {\n        return pcs;\n      }\n\n      return 'dark';\n    }\n\n    return theme;\n  },\n\n  afterLoginRoute: (state, getters) => {\n    const afterLoginRoutePref = getters['get'](AFTER_LOGIN_ROUTE);\n\n    if (typeof afterLoginRoutePref !== 'string') {\n      return afterLoginRoutePref;\n    }\n\n    switch (true) {\n    case (afterLoginRoutePref === 'home'):\n      return { name: 'home' };\n    case (afterLoginRoutePref === 'last-visited'): {\n      const lastVisitedPref = getters['get'](LAST_VISITED);\n\n      if (lastVisitedPref) {\n        return lastVisitedPref;\n      }\n      const clusterPref = getters['get'](CLUSTER);\n\n      return { name: 'c-cluster-explorer', params: { product: 'explorer', cluster: clusterPref } };\n    }\n    case (!!afterLoginRoutePref.match(/.+-dashboard$/)):\n    {\n      const clusterId = afterLoginRoutePref.split('-dashboard')[0];\n\n      return { name: 'c-cluster-explorer', params: { product: 'explorer', cluster: clusterId } };\n    }\n    default:\n      return { name: afterLoginRoutePref };\n    }\n  }\n};\n\nexport const mutations = {\n  load(state, { key, value }) {\n    state.data[key] = value;\n  },\n\n  cookiesLoaded(state) {\n    state.cookiesLoaded = true;\n  },\n\n  reset(state) {\n    for (const key in state.definitions) {\n      if ( state.definitions[key]?.asCookie ) {\n        continue;\n      }\n      delete state.data[key];\n    }\n  },\n\n  setDefinition(state, { name, definition = {} }) {\n    state.definitions[name] = definition;\n  },\n};\n\nexport const actions = {\n  async set({\n    dispatch, commit, rootGetters, state\n  }, opt) {\n    let { key, value } = opt; // eslint-disable-line prefer-const\n    const definition = state.definitions[key];\n    let server;\n\n    if ( opt.val ) {\n      throw new Error('Use value, not val');\n    }\n\n    commit('load', { key, value });\n\n    if ( definition.asCookie ) {\n      const opt = {\n        ...cookieOptions,\n        parseJSON: definition.parseJSON === true\n      };\n\n      this.$cookies.set(`${ cookiePrefix }${ key }`.toUpperCase(), value, opt);\n    }\n\n    if ( definition.asUserPreference ) {\n      const checkLogin = rootGetters['auth/loggedIn'];\n\n      // Check for login status\n      if (!checkLogin) {\n        prefsBeforeLogin[key] = value;\n\n        return;\n      }\n\n      try {\n        server = await dispatch('loadServer', key); // There's no watch on prefs, so get before set...\n\n        if ( server?.data ) {\n          if ( definition.mangleWrite ) {\n            value = definition.mangleWrite(value);\n          }\n\n          if ( definition.parseJSON ) {\n            server.data[key] = JSON.stringify(value);\n          } else {\n            server.data[key] = value;\n          }\n\n          await server.save({ redirectUnauthorized: false });\n        }\n      } catch (e) {\n        // Well it failed, but not much to do about it...\n\n        // Return the error\n        return { type: e.type, status: e.status };\n      }\n    }\n  },\n\n  async setTheme({ dispatch }, val) {\n    await dispatch('set', { key: THEME, value: val });\n  },\n\n  loadCookies({ state, commit }) {\n    if ( state.cookiesLoaded ) {\n      return;\n    }\n\n    for (const key in state.definitions) {\n      const definition = state.definitions[key];\n\n      if ( !definition.asCookie ) {\n        continue;\n      }\n\n      const opt = { parseJSON: definition.parseJSON === true };\n      const value = this.$cookies.get(`${ cookiePrefix }${ key }`.toUpperCase(), opt);\n\n      if (value !== undefined) {\n        commit('load', { key, value });\n      }\n    }\n\n    commit('cookiesLoaded');\n  },\n\n  loadTheme({ dispatch }) {\n    const watchDark = window.matchMedia('(prefers-color-scheme: dark)');\n    const watchLight = window.matchMedia('(prefers-color-scheme: light)');\n    const watchNone = window.matchMedia('(prefers-color-scheme: no-preference)');\n\n    const interval = 30 * 60 * 1000;\n    const nextHalfHour = interval - Math.round(new Date().getTime()) % interval;\n\n    setTimeout(() => {\n      dispatch('loadTheme');\n    }, nextHalfHour);\n    // console.log('Update theme in', nextHalfHour, 'ms');\n\n    if ( watchDark.matches ) {\n      changed('dark');\n    } else if ( watchLight.matches ) {\n      changed('light');\n    } else {\n      changed(fromClock());\n    }\n\n    watchDark.addListener((e) => {\n      if ( e.matches ) {\n        changed('dark');\n      }\n    });\n\n    watchLight.addListener((e) => {\n      if ( e.matches ) {\n        changed('light');\n      }\n    });\n\n    watchNone.addListener((e) => {\n      if ( e.matches ) {\n        changed(fromClock());\n      }\n    });\n\n    function changed(value) {\n      // console.log('Prefers Theme:', value);\n      dispatch('set', { key: PREFERS_SCHEME, value });\n    }\n\n    function fromClock() {\n      const hour = new Date().getHours();\n\n      if ( hour < 7 || hour >= 18 ) {\n        return 'dark';\n      }\n\n      return 'light';\n    }\n  },\n\n  async loadServer( {\n    state, dispatch, commit, rootState, rootGetters\n  }, ignoreKey) {\n    let server = { data: {} };\n\n    try {\n      const all = await dispatch('management/findAll', {\n        type: STEVE.PREFERENCE,\n        opt:  {\n          url:                  'userpreferences',\n          force:                true,\n          watch:                false,\n          redirectUnauthorized: false,\n          stream:               false,\n        }\n      }, { root: true });\n\n      server = all?.[0];\n    } catch (e) {\n      console.error('Error loading preferences', e); // eslint-disable-line no-console\n\n      return;\n    }\n\n    if ( !server?.data ) {\n      return;\n    }\n\n    // if prefsBeforeLogin has values from login page, update the backend\n    if (Object.keys(prefsBeforeLogin).length > 0) {\n      Object.keys(prefsBeforeLogin).forEach((key) => {\n        server.data[key] = prefsBeforeLogin[key];\n      });\n\n      await server.save({ redirectUnauthorized: false });\n\n      // Clear prefsBeforeLogin, as we have now saved theses\n      prefsBeforeLogin = {};\n    }\n\n    for (const key in state.definitions) {\n      const definition = state.definitions[key];\n      let value = clone(server.data[key]);\n\n      if (value === undefined && definition.inheritFrom) {\n        value = clone(server.data[definition.inheritFrom]);\n      }\n\n      if ( value === undefined || key === ignoreKey) {\n        continue;\n      }\n\n      if ( definition.parseJSON ) {\n        try {\n          value = JSON.parse(value);\n        } catch (err) {\n          console.error('Error parsing server pref', key, value, err); // eslint-disable-line no-console\n          continue;\n        }\n      }\n\n      if ( definition.mangleRead ) {\n        value = definition.mangleRead(value);\n      }\n\n      commit('load', { key, value });\n    }\n\n    return server;\n  },\n\n  setLastVisited({ state, dispatch, getters }, route) {\n    if (!route) {\n      return;\n    }\n\n    // Only save the last visited page if the user has that set as the login route preference\n    const afterLoginRoutePref = getters['get'](AFTER_LOGIN_ROUTE);\n    const doNotTrackLastVisited = typeof afterLoginRoutePref !== 'string' || afterLoginRoutePref !== 'last-visited';\n\n    if (doNotTrackLastVisited) {\n      return;\n    }\n\n    const toSave = getLoginRoute(route);\n\n    return dispatch('set', { key: LAST_VISITED, value: toSave });\n  },\n\n  toggleTheme({ getters, dispatch }) {\n    const value = getters[THEME] === 'light' ? 'dark' : 'light';\n\n    return dispatch('set', { key: THEME, value });\n  },\n\n  setBrandStyle({ rootState, rootGetters }, dark = false) {\n    if (rootState.managementReady) {\n      try {\n        const brandSetting = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.BRAND);\n\n        if (brandSetting && brandSetting.value && brandSetting.value !== '') {\n          const brand = brandSetting.value;\n\n          const brandMeta = require(`~shell/assets/brand/${ brand }/metadata.json`);\n          const hasStylesheet = brandMeta.hasStylesheet === 'true';\n\n          if (hasStylesheet) {\n            document.body.classList.add(brand);\n          } else {\n            // TODO option apply color at runtime\n          }\n        }\n      } catch {}\n    }\n  }\n};\n\nfunction getLoginRoute(route) {\n  let parts = route.name?.split('-') || [];\n  const params = {};\n  const routeParams = route.params || {};\n\n  // Find the 'resource' part of the route, if it is there\n  const index = parts.findIndex((p) => p === 'resource');\n\n  if (index >= 0) {\n    parts = parts.slice(0, index);\n  }\n\n  // Just keep the params that are needed\n  parts.forEach((param) => {\n    if (routeParams[param]) {\n      params[param] = routeParams[param];\n    }\n  });\n\n  return {\n    name: parts.join('-'),\n    params\n  };\n}\n","import { get } from './object';\nimport { strPad } from './string';\n\n// Based on https://github.com/emberjs/ember.js/blob/master/packages/@ember/-internals/runtime/lib/type-of.js\n// and      https://github.com/emberjs/ember.js/blob/master/packages/@ember/-internals/runtime/lib/mixins/array.js\n/*\nCopyright (c) 2019 Yehuda Katz, Tom Dale and Ember.js contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n// ........................................\n// TYPING & ARRAY MESSAGING\n//\nconst TYPE_MAP = {\n  '[object Boolean]':  'boolean',\n  '[object Number]':   'number',\n  '[object String]':   'string',\n  '[object Function]': 'function',\n  '[object Array]':    'array',\n  '[object Date]':     'date',\n  '[object RegExp]':   'regexp',\n  '[object Object]':   'object',\n  '[object FileList]': 'filelist',\n};\n\nconst { toString } = Object.prototype;\n\n/**\n  Returns a consistent type for the passed object.\n\n  Use this instead of the built-in `typeof` to get the type of an item.\n  It will return the same result across all browsers and includes a bit\n  more detail. Here is what will be returned:\n\n      | Return Value  | Meaning                                              |\n      |---------------|------------------------------------------------------|\n      | 'string'      | String primitive or String object.                   |\n      | 'number'      | Number primitive or Number object.                   |\n      | 'boolean'     | Boolean primitive or Boolean object.                 |\n      | 'null'        | Null value                                           |\n      | 'undefined'   | Undefined value                                      |\n      | 'function'    | A function                                           |\n      | 'array'       | An instance of Array                                 |\n      | 'regexp'      | An instance of RegExp                                |\n      | 'date'        | An instance of Date                                  |\n      | 'filelist'    | An instance of FileList                              |\n      | 'error'       | An instance of the Error object                      |\n      | 'object'      | A JavaScript object                                  |\n\n  Examples:\n\n  import { typeOf } from '@shell/utils/type-of';\n\n  typeOf();                       // 'undefined'\n  typeOf(null);                   // 'null'\n  typeOf(undefined);              // 'undefined'\n  typeOf('michael');              // 'string'\n  typeOf(new String('michael'));  // 'string'\n  typeOf(101);                    // 'number'\n  typeOf(new Number(101));        // 'number'\n  typeOf(true);                   // 'boolean'\n  typeOf(new Boolean(true));      // 'boolean'\n  typeOf(A);                      // 'function'\n  typeOf([1, 2, 90]);             // 'array'\n  typeOf(/abc/);                  // 'regexp'\n  typeOf(new Date());             // 'date'\n  typeOf(event.target.files);     // 'filelist'\n  typeOf(new Error('teamocil'));  // 'error'\n\n  // 'normal' JavaScript object\n  typeOf({ a: 'b' });             // 'object'\n*/\nexport function typeOf(item) {\n  if (item === null) {\n    return 'null';\n  }\n  if (item === undefined) {\n    return 'undefined';\n  }\n  let ret = TYPE_MAP[toString.call(item)] || 'object';\n\n  if (ret === 'object') {\n    if (item instanceof Error) {\n      ret = 'error';\n    } else if (item instanceof Date) {\n      ret = 'date';\n    }\n  }\n\n  return ret;\n}\n\nexport function spaceship(a, b) {\n  const diff = a - b;\n\n  return (diff > 0) - (diff < 0);\n}\n\nconst TYPE_ORDER = {\n  undefined: 0,\n  null:      1,\n  boolean:   2,\n  number:    3,\n  string:    4,\n  array:     5,\n  object:    6,\n  instance:  7,\n  function:  8,\n  class:     9,\n  date:      10,\n};\n\nexport function compare(a, b) {\n  const typeA = typeOf(a);\n  const typeB = typeOf(b);\n\n  const res = spaceship(TYPE_ORDER[typeA], TYPE_ORDER[typeB]);\n\n  if ( res ) {\n    return res;\n  }\n\n  switch (typeA) {\n  case 'boolean':\n  case 'number':\n    return spaceship(a, b);\n\n  case 'string':\n    return spaceship(a.localeCompare(b), 0);\n\n  case 'array': {\n    const aLen = a.length;\n    const bLen = b.length;\n    const len = Math.min(aLen, bLen);\n\n    for (let i = 0; i < len; i++) {\n      const r = compare(a[i], b[i]);\n\n      if (r !== 0) {\n        return r;\n      }\n    }\n\n    // all elements are equal now\n    // shorter array should be ordered first\n    return spaceship(aLen, bLen);\n  }\n  case 'date':\n    return spaceship(a.getTime(), b.getTime());\n  }\n\n  return 0;\n}\n\nexport function parseField(str) {\n  const parts = str.split(/:/);\n\n  if ( parts.length === 2 && parts[1] === 'desc' ) {\n    return { field: parts[0], reverse: true };\n  } else {\n    return { field: str, reverse: false };\n  }\n}\n\nexport function sortBy(ary, keys, desc) {\n  if ( !Array.isArray(keys) ) {\n    keys = [keys];\n  }\n\n  return (ary || []).slice().sort((objA, objB) => {\n    for ( let i = 0 ; i < keys.length ; i++ ) {\n      const parsed = parseField(keys[i]);\n      const a = get(objA, parsed.field);\n      const b = get(objB, parsed.field);\n      let res = compare(a, b);\n\n      if ( res ) {\n        if ( desc ) {\n          res *= -1;\n        }\n\n        if ( parsed.reverse ) {\n          res *= -1;\n        }\n\n        return res;\n      }\n    }\n\n    return 0;\n  });\n}\n\n// Turn foo1-bar2 into foo0000000001-bar0000000002 so that the numbers sort numerically\nconst splitRegex = /([^\\d]+)/;\nconst notNumericRegex = /^[0-9]+$/;\n\nexport function sortableNumericSuffix(str) {\n  if ( typeof str !== 'string' ) {\n    return str;\n  }\n\n  return str.split(splitRegex).map((x) => x.match(notNumericRegex) ? strPad(x, 10, '0') : x).join('').trim();\n}\n\nexport function isNumeric(num) {\n  return !!`${ num }`.match(notNumericRegex);\n}\n","import { findBy } from '@shell/utils/array';\nimport { sortBy } from '@shell/utils/sort';\n\nlet NEXT_ID = 1;\n\nexport const BEFORE_SAVE_HOOKS = '_beforeSaveHooks';\nexport const AFTER_SAVE_HOOKS = '_afterSaveHooks';\n\nexport default {\n  methods: {\n    registerBeforeHook(boundFn, name, priority = 99, boundFnContext) {\n      this._registerHook(BEFORE_SAVE_HOOKS, boundFn, name, priority, boundFnContext);\n    },\n\n    unregisterBeforeSaveHook(name) {\n      this[BEFORE_SAVE_HOOKS] = this[BEFORE_SAVE_HOOKS].filter((hook) => {\n        // BEFORE_SAVE_HOOKS is an array of objects with keys\n        // fn, name and priority.\n        return hook.name !== name;\n      });\n    },\n\n    registerAfterHook(boundFn, name, priority = 99, boundFnContext) {\n      this._registerHook(AFTER_SAVE_HOOKS, boundFn, name, priority, boundFnContext);\n    },\n\n    async applyHooks(key, ...args) {\n      if (!key) {\n        throw new Error('Must specify key');\n      }\n\n      const hooks = sortBy(this[key] || [], ['priority', 'name']);\n      const out = {};\n\n      for (const x of hooks) {\n        console.debug('Applying hook', x.name); // eslint-disable-line no-console\n        out[x.name] = await x.fn.apply(x.fnContext || this, args);\n      }\n\n      return out;\n    },\n\n    _registerHook(key, fn, name, priority, fnContext) {\n      if ( !key ) {\n        throw new Error('Must specify key');\n      }\n\n      if ( !name ) {\n        name = `hook_${ NEXT_ID }`;\n        NEXT_ID++;\n      }\n\n      if ( !priority ) {\n        priority = 99;\n      }\n\n      let hooks = this[key];\n\n      if ( !hooks ) {\n        hooks = [];\n        this[key] = hooks;\n      }\n\n      let entry = findBy(hooks, 'name', name);\n\n      if ( entry ) {\n        entry.priority = priority;\n        entry.fn = fn;\n        entry.fnContext = fnContext;\n      } else {\n        entry = {\n          name,\n          priority,\n          fn,\n          fnContext\n        };\n\n        hooks.push(entry);\n      }\n    },\n  },\n};\n","import { SCHEMA } from '@shell/config/types';\n\nimport { applyChangeset, changeset, changesetConflicts } from '@shell/utils/object';\n\nexport const KEY_FIELD_FOR = {\n  [SCHEMA]: '_id',\n  default:  'id',\n};\n\nexport function keyFieldFor(type) {\n  return KEY_FIELD_FOR[type] || KEY_FIELD_FOR['default'];\n}\n\nexport function normalizeType(type) {\n  type = (type?.type || type || '').toLowerCase();\n\n  return type;\n}\n\n// Detect and resolve conflicts from a 409 response.\n// If they are resolved, return a false-y value\n// Else they can't be resolved, return an array of errors to show to the user.\nexport async function handleConflict(initialValueJSON, value, liveValue, rootGetters, store, storeNamespace) {\n  const orig = await store.dispatch(`${ storeNamespace }/cleanForDiff`, initialValueJSON, { root: true });\n  const user = await store.dispatch(`${ storeNamespace }/cleanForDiff`, value.toJSON(), { root: true });\n  const cur = await store.dispatch(`${ storeNamespace }/cleanForDiff`, liveValue.toJSON(), { root: true });\n\n  const bgChange = changeset(orig, cur);\n  const userChange = changeset(orig, user);\n  const actualConflicts = changesetConflicts(bgChange, userChange);\n\n  console.log('Background Change', bgChange); // eslint-disable-line no-console\n  console.log('User Change', userChange); // eslint-disable-line no-console\n  console.log('Conflicts', actualConflicts); // eslint-disable-line no-console\n\n  value.metadata.resourceVersion = liveValue.metadata.resourceVersion;\n  applyChangeset(value, bgChange);\n\n  if ( actualConflicts.length ) {\n    // Stop the save and let the user inspect and continue editing\n    const out = [rootGetters['i18n/t']('validation.conflict', { fields: actualConflicts.join(', '), fieldCount: actualConflicts.length })];\n\n    return out;\n  } else {\n    // The save can continue\n    return false;\n  }\n}\n","import { _CREATE, _EDIT, _VIEW } from '@shell/config/query-params';\nimport { LAST_NAMESPACE } from '@shell/store/prefs';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport ChildHook, { BEFORE_SAVE_HOOKS, AFTER_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport { clear } from '@shell/utils/array';\nimport { DEFAULT_WORKSPACE } from '@shell/config/types';\nimport { handleConflict } from '@shell/plugins/dashboard-store/normalize';\n\nexport default {\n\n  name: 'CreateEditView',\n\n  mixins: [ChildHook],\n\n  data() {\n    // Keep label and annotation filters in data so each resource CRUD page can alter individually\n    return { errors: [] };\n  },\n\n  computed: {\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n\n    isEdit() {\n      return this.mode === _EDIT;\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    schema() {\n      const inStore = this.storeOverride || this.$store.getters['currentStore'](this.value.type);\n\n      return this.$store.getters[`${ inStore }/schemaFor`](this.value.type);\n    },\n\n    isNamespaced() {\n      return this.schema?.attributes?.namespaced || false;\n    },\n\n    labels: {\n      get() {\n        return this.value?.labels;\n      },\n      set(neu) {\n        this.value.setLabels(neu);\n      }\n    },\n\n    annotations: {\n      get() {\n        return this.value?.annotations;\n      },\n      set(neu) {\n        this.value.setAnnotations(neu);\n      }\n    },\n\n    doneRoute() {\n      if ( this.value?.doneRoute ) {\n        return this.value.doneRoute;\n      }\n\n      let name = this.$route.name;\n\n      if ( name?.endsWith('-id') ) {\n        name = name.replace(/(-namespace)?-id$/, '');\n      } else if ( name?.endsWith('-create') ) {\n        name = name.replace(/-create$/, '');\n      }\n\n      return name;\n    },\n\n    doneParams() {\n      if ( this.value?.doneParams ) {\n        return this.value.doneParams;\n      }\n\n      const out = { ...this.$route.params };\n\n      delete out.namespace;\n      delete out.id;\n\n      return out;\n    },\n\n  },\n\n  methods: {\n    done() {\n      if ( this.doneEvent ) {\n        this.$emit('done');\n\n        return;\n      }\n\n      if ( this.doneLocationOverride) {\n        return this.$router.replace(this.doneLocationOverride);\n      }\n\n      if ( !this.doneRoute ) {\n        return;\n      }\n\n      this.$router.replace({\n        name:   this.doneRoute,\n        params: this.doneParams || { resource: this.value.type }\n      });\n    },\n\n    // Detect and resolve conflicts from a 409 response.\n    // If they are resolved, return a false-y value\n    // Else they can't be resolved, return an array of errors to show to the user.\n    async conflict() {\n      return await handleConflict(this.initialValue.toJSON(), this.value, this.liveValue, this.$store.getters, this.$store, this.storeOverride || this.$store.getters['currentStore'](this.value.type));\n    },\n\n    async save(buttonDone, url, depth = 0) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      try {\n        await this.applyHooks(BEFORE_SAVE_HOOKS, this.value);\n\n        // Remove the labels map if it's empty\n        if ( this.value?.metadata?.labels && Object.keys(this.value.metadata.labels || {}).length === 0 ) {\n          delete this.value.metadata.labels;\n        }\n\n        // Remove the annotations map if it's empty\n        if ( this.value?.metadata?.annotations && Object.keys(this.value.metadata.annotations || {}).length === 0 ) {\n          delete this.value.metadata.annotations;\n        }\n\n        if ( this.isCreate ) {\n          const ns = this.value?.metadata?.namespace;\n\n          // Don't remember fleet-default as a target since the user isn't usually picking it explicitly\n          if ( ns && ns !== DEFAULT_WORKSPACE ) {\n            this.value.$dispatch('prefs/set', { key: LAST_NAMESPACE, value: ns }, { root: true });\n          }\n        }\n\n        await this.actuallySave(url);\n\n        // If spoofed we need to reload the values as the server can't have watchers for them.\n        if (this.$store.getters['type-map/isSpoofed'](this.value.type)) {\n          await this.$store.dispatch('cluster/findAll', { type: this.value.type, opt: { force: true } }, { root: true });\n        }\n\n        await this.applyHooks(AFTER_SAVE_HOOKS, this.value);\n        buttonDone && buttonDone(true);\n\n        this.done();\n      } catch (err) {\n        // Conflict, the resource being edited has changed since starting editing\n        if ( err.status === 409 && depth === 0 && this.isEdit) {\n          const errors = await this.conflict();\n\n          if ( errors === false ) {\n            // It was automatically figured out, save again\n            return this.save(buttonDone, url, depth + 1);\n          } else {\n            this.errors = errors;\n          }\n        } else {\n          this.errors = exceptionToErrorsArray(err);\n        }\n        // Provide a stack trace for easier debugging of save errors\n        console.error('CreateEditView mixin failed to save: ', err); // eslint-disable-line no-console\n        buttonDone && buttonDone(false);\n      }\n    },\n\n    async actuallySave(url) {\n      if ( this.isCreate ) {\n        url = url || this.schema.linkFor('collection');\n        const res = await this.value.save({ url });\n\n        if (res) {\n          Object.assign(this.value, res);\n        }\n      } else {\n        await this.value.save();\n      }\n    },\n\n    setErrors(errors) {\n      this.errors = errors;\n    }\n  },\n};\n","import { _EDIT, _YAML } from '@shell/config/query-params';\nimport { defineComponent } from 'vue';\n\nimport impl from './impl';\n\nexport default defineComponent({\n  ...impl,\n\n  props: {\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    realMode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    as: {\n      type:    String,\n      default: _YAML,\n    },\n\n    // The model to be manipulated by the form\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    // A clone of the model before it's been changed, for conflict resolution\n    initialValue: {\n      type:    Object,\n      default: null,\n    },\n\n    // The 'live' equivalent of this model in the store\n    liveValue: {\n      type:    Object,\n      default: null,\n    },\n\n    doneEvent: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../vue-loader/dist/stylePostLoader.js!../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../vue-loader/dist/index.js??ruleSet[0].use[1]!./Loading.vue?vue&type=style&index=0&id=1d9696d1&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ae6b26d2\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["class","$props","loading","_createElementBlock","_hoisted_1","$data","showMessage","_normalizeClass","mode","_createVNode","_component_t","k","raw","_hoisted_2","_renderSlot","_ctx","$slots","undefined","props","type","Boolean","default","String","noDelay","data","timer","this","mounted","setTimeout","beforeUnmount","clearTimeout","__exports__","render","___CSS_LOADER_EXPORT___","push","module","id","SETTING","VERSION_RANCHER","VERSION_CLI","VERSION_MACHINE","VERSION_HELM","CLI_URL","DARWIN","WINDOWS","LINUX","API_HOST","CA_CERTS","HIDE_LOCAL_CLUSTER","AUTH_TOKEN_MAX_TTL_MINUTES","KUBECONFIG_GENERATE_TOKEN","KUBECONFIG_DEFAULT_TOKEN_TTL_MINUTES","ENGINE_URL","ENGINE_ISO_URL","FIRST_LOGIN","INGRESS_IP_DOMAIN","SERVER_URL","RKE_METADATA_CONFIG","TELEMETRY","EULA_AGREED","AUTH_USER_INFO_MAX_AGE_SECONDS","AUTH_USER_SESSION_TTL_MINUTES","AUTH_USER_INFO_RESYNC_CRON","AUTH_LOCAL_VALIDATE_DESC","PASSWORD_MIN_LENGTH","CLUSTER_TEMPLATE_ENFORCEMENT","UI_INDEX","UI_DASHBOARD_INDEX","UI_DASHBOARD_HARVESTER_LEGACY_PLUGIN","UI_OFFLINE_PREFERRED","SYSTEM_DEFAULT_REGISTRY","UI_ISSUES","PL","PL_RANCHER_VALUE","SUPPORTED","BANNERS","ISSUES","BRAND","LOGO_LIGHT","LOGO_DARK","BANNER_LIGHT","BANNER_DARK","LOGIN_BACKGROUND_LIGHT","LOGIN_BACKGROUND_DARK","PRIMARY_COLOR","LINK_COLOR","COMMUNITY_LINKS","FAVICON","UI_PERFORMANCE","UI_CUSTOM_LINKS","UI_SUPPORTED_K8S_VERSIONS","THEME","SYSTEM_NAMESPACES","CLUSTER_AGENT_DEFAULT_AFFINITY","FLEET_AGENT_DEFAULT_AFFINITY","ADD_EXTENSION_REPOS_BANNER_DISPLAY","AGENT_TLS_MODE","USER_RETENTION_CRON","USER_RETENTION_DRY_RUN","USER_LAST_LOGIN_DEFAULT","DISABLE_INACTIVE_USER_AFTER","DELETE_INACTIVE_USER_AFTER","definitions","create","name","def","opt","parseJSON","asCookie","asUserPreference","options","inheritFrom","mangleRead","mangleWrite","LAST_NAMESPACE","DEV","x","replace","_RKE1","_RKE2","TYPE_MAP","toString","Object","prototype","typeOf","item","ret","call","Error","Date","spaceship","a","b","diff","TYPE_ORDER","null","boolean","number","string","array","object","instance","function","date","compare","typeA","typeB","res","localeCompare","aLen","length","bLen","len","Math","min","i","r","getTime","parseField","str","parts","split","field","reverse","sortBy","ary","keys","desc","Array","isArray","slice","sort","objA","objB","parsed","get","NEXT_ID","BEFORE_SAVE_HOOKS","AFTER_SAVE_HOOKS","methods","registerBeforeHook","boundFn","priority","boundFnContext","_registerHook","unregisterBeforeSaveHook","filter","hook","registerAfterHook","applyHooks","key","args","hooks","out","console","debug","fn","apply","fnContext","entry","findBy","SCHEMA","async","handleConflict","initialValueJSON","value","liveValue","rootGetters","store","storeNamespace","orig","dispatch","root","user","toJSON","cur","bgChange","changeset","userChange","actualConflicts","changesetConflicts","log","metadata","resourceVersion","applyChangeset","fields","join","fieldCount","mixins","ChildHook","errors","computed","isCreate","_CREATE","isEdit","_EDIT","isView","_VIEW","schema","inStore","storeOverride","$store","getters","isNamespaced","attributes","namespaced","labels","set","neu","setLabels","annotations","setAnnotations","doneRoute","$route","endsWith","doneParams","params","namespace","done","doneEvent","doneLocationOverride","$router","resource","$emit","conflict","initialValue","save","buttonDone","url","depth","clear","ns","DEFAULT_WORKSPACE","$dispatch","actuallySave","force","err","status","exceptionToErrorsArray","error","linkFor","assign","setErrors","defineComponent","impl","realMode","as","_YAML","required","content","__esModule","locals","exports","add"],"sourceRoot":""}